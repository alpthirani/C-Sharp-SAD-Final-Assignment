<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>